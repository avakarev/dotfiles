#!/usr/bin/env node

// TODO: implement iterating over all js files in case directory
// TODO? allow jslint check as well and using $JSLINT_ENGINE env var or so
// TODO: handle exception "Error: ENOENT, no such file or directory 'file.js'"
// TODO: handle exception "Error: EISDIR, illegal operation on a directory"

(function () {
        // modules
    var fs    = require('fs'),
        path  = require('path'),
        util  = require('util'),
        vm    = require('vm'),
        // locals
        sandbox = {},
        jshintFile = path.resolve(__dirname, './deps/jshint/jshint.js'),
        filename,
        input,
        isItNodejs = false,
        errors,
        warning;

    vm.runInNewContext(fs.readFileSync(jshintFile), sandbox, jshintFile);

    JSHINT = sandbox.JSHINT;

    // capture the command line argument
    filename = process.argv[2];

    // show usage if no argument was specified
    if (!filename) {
        util.puts('Usage: jscheck file.js');
        process.exit(1);
    }

    // read the file specified
    input = fs.readFileSync(filename).toString('utf-8');

    isItNodejs = (input.substr(0, 2) === '#!') || (input.search(/exports|require\(|module|\_\_filename|\_\_dirname/i) > 0);

    // run jslint on the file
    JSHINT(input, {
        // see http://www.jshint.com/options/

        'predef': [
            '$', 'jQuery',
            'BEM', 'BEMHTML', 'Perl', 'Lang', 'MobStatLog', 'blocks', 'GLOB',
            'jasmine', 'spyOn', 'it', 'describe', 'expect', 'beforeEach', 'waits', 'waitsFor', 'runs'
        ],

        'indent': 4,
        'maxlen': 120,
        'maxerr': 100,

        'node'   : isItNodejs,
        'es5'    : true,
        'browser': true,

        'bitwise' : true,
        'boss'    : false,
        'curly'   : true,
        'debug'   : false,
        'devel'   : false,
        'eqeqeq'  : true,
        'evil'    : true,
        'forin'   : true,
        'immed'   : true,
        'laxbreak': false,
        'laxcomma': true,
        'newcap'  : false,
        'noarg'   : true,
        'noempty' : true,
        'nonew'   : false,
        'nomen'   : false,
        'onevar'  : false,
        'plusplus': false,
        'regexp'  : false,
        'undef'   : true,
        'sub'     : true,
        'strict'  : false,
        'white'   : false
    });

    var c = {
        red:   '\033[31m',
        green: '\033[32m',
        yellow:'\033[33m',
        blue:  '\033[34m',
        purple:'\033[35m',
        cyan:  '\033[36m',
        reset: '\033[0m'
    };

    JSHINT.errors.forEach(function(err, index) {
        util.puts(
            c.yellow + '=> ' + c.blue + filename + c.reset + '(L' + err.line + ':C' + err.character + ') ' + c.yellow + err.reason + c.reset + '\n' +
            err.evidence
        );
    });
    util.puts('==================\n' +
              'Total warnings: ' + JSHINT.errors.length
    );
}());
