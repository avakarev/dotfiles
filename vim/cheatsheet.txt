vim -u NONE                 run vim without custom settings
vim -u ~/.my-custom-vimrc   run vim with some custom config

nCmd        repeat n times every Cmd command (ex: 7j, 4{}, 2w)
.           repeat last command
*           will highlight all occurrences of the word that is under the cursor


:help word-motions
:help cursor-motions
" -------------- [Moving] --------------
h           left
j           down
k           up
l           right
n(h|j|k|l)  repeat jump operation n times (4j, 16k)
w           next word, moves to first symbol
e           next word, moves to last symbol
b           previous word
}           next paragraph
{           previous paragraph
)           next sentence
(           previous sentence
3fh         3rd occurrence of the letter 'h'
35j         35 lines downwards
ctrl+o      jump back to the previous location
^           moves to the start of the line
$           moves to the end of the line
ctrl+b      moves one screen up
ctrl+f      moves one screen down
1G          moves to the first line of the file
G           jump to the last line of the file
nG          jump to n line
H           jump to the first line of the display ('H'ighest)
M           jump to the middle of the display ('M'iddle)
L           jump to the last line of the display ('L'owest)
:tabo       close all tabs except the current tab
guu         make current line lowercase
gUU         make current line uppercase
:Ex         open the file explorer
vim -d file1 file2  show the difference between two files
:sh or :shell       to open a console (then exit to come back to vim)
u / ctrl-r  (in normal mode): undo / redo
J           join two lines
gt          next tab
gT          previous tab


:help vim-modes-intro
:help mode-switching
" -------------- [Modes] --------------
i           insert text just before the cursor
I           insert text at the start of the line
a           append text just after the cursor
A           append text at the end of the line
o           open a new line below
O           open a new line above
s           substitute the current character
S           substitute the current line
r           replace the current character
R           replace continuous characters
v           go to visual mode and operate in terms of characters
V           go to visual mode and operate in terms of lines

" -------------- [Fuck you, Windows] --------------
^M in VIM can be manipulated as it is an \r character.
Often times other developers would edit files under Windows and ^M characters would be inserted.
It is quite easy get rid on them. There several method to reach the goal.
1) :%s/^M//g " Be sure you make the ^M by using Ctrl+v + Ctrl+m, cause of unicode
2) sed 's/^M//g' dirty.file > clean.file " See line above and use Ctrl+v + Ctrl+m
3) dos2unix < tempfile > actualfile


" ------------------- [Debug] ----------------------
:verbose set varname    Let you know from which file script variable was changed
:let                    List of all variables
:set                    List of all not-default settings
:function               List of all non-built-in functions
:map                    List of all mappings
